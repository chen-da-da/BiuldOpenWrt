#使用mac编译
name: Build OpenWrt on mac
on: 
  repository_dispatch:
  workflow_dispatch:
jobs:
  build:
    runs-on: macos-12
    steps:
    - name: 查看mac
      run: |
        system_profiler SPHardwareDataType
        xcodebuild -version
        df -lh
        java -version
        make -v
    - name: 安装 Homebrew
      run: |
        /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    - name: 使用 Homebrew 安装工具链、依赖与基础软件包
      run: |
        #brew unlink awk
        #brew update
        #brew upgrade
        brew install coreutils diffutils findutils gawk gnu-getopt gnu-tar grep make ncurses pkg-config wget quilt xz
        #brew install coreutils diffutils findutils gawk gnu-getopt gnu-tar grep ncurses pkg-config wget quilt xz
        brew install gcc@11
        make -v
    - name: 升级make
      run: |
        wget http://ftp.gnu.org/gnu/make/make-4.2.tar.gz
        tar xf make-4.2.tar.gz
        cd make-4.2/
        ./configure
        make
        make install
        export PATH="/usr/local/bin:$PATH"
        make -v
    - name: 输入以下命令，添加到系统环境变量中
      run: |
        echo 'export PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"' >> ~/.bashrc
        echo 'export PATH="/usr/local/opt/findutils/libexec/gnubin:$PATH"' >> ~/.bashrc
        echo 'export PATH="/usr/local/opt/gnu-getopt/bin:$PATH"' >> ~/.bashrc
        echo 'export PATH="/usr/local/opt/gnu-tar/libexec/gnubin:$PATH"' >> ~/.bashrc
        echo 'export PATH="/usr/local/opt/grep/libexec/gnubin:$PATH"' >> ~/.bashrc
        echo 'export PATH="/usr/local/opt/gnu-sed/libexec/gnubin:$PATH"' >> ~/.bashrc
        echo 'export PATH="/usr/local/opt/make/libexec/gnubin:$PATH"' >> ~/.bashrc
        cat ~/.bashrc
        make -v
    - name: 重新加载shell 启动文件
      run: |
        source ~/.bashrc
        bash
#     - name: 安装依赖
#       run: |
#         brew update
#         #brew upgrade
#         brew install ack antlr@2 asciidoc automake autopoint binutils bison build-essential \
#         bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib \
#         git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev \
#         libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz \
#         mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip qemu-utils \
#         rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
    - name: 创建大小写敏感的磁盘镜像
      run: |
        hdiutil create -size 50g -type SPARSE -fs "Case-sensitive HFS+" -volname OpenWrt OpenWrt.sparseimage
        hdiutil attach OpenWrt.sparseimage
        cd /Volumes/OpenWrt
        pwd
    - name: 下载源代码，更新 feeds 并选择配置
      run: |
        cd /Volumes/OpenWrt
        git clone https://github.com/coolsnowwolf/lede
        cd lede
        echo "*********************pwd**************************************"
        pwd
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        make defconfig
    - name: 下载 dl 库，编译固件
      run: |
        cd /Volumes/OpenWrt/lede
        pwd
        make download -j8
        make V=s -j$(nproc)
    - name: 编译结束
      run: |
        echo "done"
